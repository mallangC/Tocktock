name: CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          clean: false

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean Gradle Cache and Build
        run: |
          ./gradlew --stop
          rm -rf ~/.gradle/caches/
          rm -rf build/

      - name: Build and Start MySQL, Redis Containers with Docker Compose
        run: |
          docker compose -f ./src/test/resources/docker-compose.yml up -d --build --wait

      - name: Verify MySQL Containers are Running
        run: docker ps -a

      # 7.6.4버전으로 gradle 세팅 (JaCoCo와 호환성이 좋은 버전으로 세팅)
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '7.6.4'

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Check application-test.yml exists
        run: cat src/test/resources/application-test.yml || echo "application-test.yml not found"

      - name: Test with Gradle
        env:
          SPRING_PROFILES_ACTIVE: test
          TEST_DB_URL: jdbc:mysql://127.0.0.1:3306/test_db
          DB_USERNAME: root
          DB_PASSWORD: rootpassword

        run: ./gradlew test --info

      - name: Generate JaCoCo Report
        run: ./gradlew jacocoTestReport

      - name: Verify JaCoCo Report Path
        run: |
          ls -la ${{ github.workspace }}/build/reports/jacoco/test/
          cat ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml   

      - name: JaCoCo Report to PR
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          title: 'Code Coverage'
          update-comment: false